/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Telas;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Aluno
 */
public class GerenciarFuncionario extends javax.swing.JFrame {
    DefaultTableModel dtm = new DefaultTableModel(
            new Object[][]{},
            new Object[]{"Nome", "ID", "Senha","Numero", "Grupo"});
    /**
     * Creates new form GerenciarFuncionario
     */
    public GerenciarFuncionario() {
        initComponents();
        setSize(357,495);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDesktopPane1 = new javax.swing.JDesktopPane();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setTitle("Gerenciar Funcionario");
        setIconImage(new ImageIcon(getClass().getResource("/img/Botão.png")).getImage());
        setLocation(new java.awt.Point(250, 150));
        setResizable(false);
        getContentPane().setLayout(null);

        jLabel2.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        jLabel2.setText("Buscar por:");
        jDesktopPane1.add(jLabel2);
        jLabel2.setBounds(10, 60, 80, 20);

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton1.setText("Buscar");
        jButton1.setToolTipText("Buscar informações no banco");
        jButton1.setBorder(new javax.swing.border.SoftBevelBorder(0));
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jDesktopPane1.add(jButton1);
        jButton1.setBounds(10, 300, 73, 30);

        jTextField1.setToolTipText("Digite a informação conforme a seleção");
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField1KeyReleased(evt);
            }
        });
        jDesktopPane1.add(jTextField1);
        jTextField1.setBounds(90, 100, 140, 30);

        jTable1.setBorder(new javax.swing.border.SoftBevelBorder(0));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nome", "ID", "Senha", "Numero", "Grupo"
            }
        ));
        jTable1.setGridColor(new java.awt.Color(102, 102, 102));
        jTable1.setSelectionBackground(new java.awt.Color(51, 153, 0));
        jScrollPane1.setViewportView(jTable1);

        jDesktopPane1.add(jScrollPane1);
        jScrollPane1.setBounds(10, 160, 320, 100);

        jButton2.setBackground(new java.awt.Color(255, 255, 255));
        jButton2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton2.setText("Deletar");
        jButton2.setBorder(new javax.swing.border.SoftBevelBorder(0));
        jButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jDesktopPane1.add(jButton2);
        jButton2.setBounds(259, 300, 70, 30);

        jComboBox1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ID", "Nome" }));
        jComboBox1.setBorder(new javax.swing.border.SoftBevelBorder(0));
        jComboBox1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jDesktopPane1.add(jComboBox1);
        jComboBox1.setBounds(90, 60, 150, 30);

        jLabel3.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        jLabel3.setText("Funcionário:");
        jDesktopPane1.add(jLabel3);
        jLabel3.setBounds(130, 140, 80, 20);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/TelaCardapio.png"))); // NOI18N
        jDesktopPane1.add(jLabel1);
        jLabel1.setBounds(-180, -70, 530, 550);

        getContentPane().add(jDesktopPane1);
        jDesktopPane1.setBounds(0, 0, 400, 510);

        pack();
    }// </editor-fold>//GEN-END:initComponents
 private void limpar() {
        dtm.setNumRows(0);
    }
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        limpar();
        buscar();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
       deleta();
       limpar();
       buscar();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTextField1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyReleased
        limpar();
        filtrar();
    }//GEN-LAST:event_jTextField1KeyReleased

    private void buscar(){
         try {           

            ArrayList<funcionarios> func = new ArrayList<>();

            //Recebendo o ArrayList cheio em produtos
            func = buscarFunc();

            for (int i = 0; i < func.size(); i++) {
                dtm.addRow(new String[]{
                    String.valueOf(func.get(i).getNomes()),
                    String.valueOf(func.get(i).getIds()),
                    String.valueOf(func.get(i).getSenhas()),
                    String.valueOf(func.get(i).getNumeros()),
                    String.valueOf(func.get(i).getGrupos())
                    
                    
                    
                    //func.get(i).getEnd().getRua(),
                    //String.valueOf(func.get(i).getEnd().getNumero())
                });
            }//fecha for

            /* Adicionando o modelo de tabela 
             com os dados na tabela produto */
            jTable1.setModel(dtm);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(
                    this,
                    "Erro ao carregar tabela: " + e.getMessage());
        }//fecha catch
    }
     public ArrayList<funcionarios> buscarFunc() throws SQLException {

        Connection con = Conecta.getConexao();
        Statement stat = con.createStatement();

      try {
            
            String sql;
          
            sql = "select idfuncionario, nome_funcionario, telefone_funcionario, grupo_funcionario, senha_funcionario from funcionario;";

            ArrayList<funcionarios> funcs = new ArrayList<>();
            ResultSet rs = stat.executeQuery(sql);
            
            while (rs.next()) {
                funcionarios f = new funcionarios();

                f.setIds(rs.getString("idfuncionario"));
                f.setNomes(rs.getString("nome_funcionario"));
                f.setNumeros(rs.getString("telefone_funcionario"));
                f.setGrupos(rs.getString("grupo_funcionario"));
                f.setSenhas(rs.getString("senha_funcionario"));
                
       
                funcs.add(f);
            }//fecha while
            //Retornando o ArrayList com todos objetos
            return funcs;

        } catch (SQLException e) {
            throw new SQLException("Erro ao buscar funcionarios! " + e.getMessage());
        } finally {
            con.close();
            stat.close();
        }//fecha finally
    }
    
    
    private void deleta(){
          try {
            //Buscando a linha que o usuário clicou 
            int linha = jTable1.getSelectedRow();
            
            // Testando se o usuário selecionou alguma linha. 
            if (linha == -1) {
                JOptionPane.showMessageDialog(
                        this,
                        "Você não selecionou nenhuma linha!");
            } else {
                
                
                // Buscando o idProduto da linha selecionada. O zero(0) indica
                   //que vamos buscar o valor da primeira coluna. 
                String cod_pessoa = (String) jTable1.getValueAt(linha, 1);
                
                // Enviando o idProduto para ser excluido. 
                deletarFunc(cod_pessoa);

                //Mensagem de sucesso para o usuário!
                JOptionPane.showMessageDialog(this,
                        "Usuário excluido com sucesso!");

            }//fecha else
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this,
                    "Erro ao deletar! " + e.getMessage());
        }//fecha catch    
    }
     public void deletarFunc(String ID) throws SQLException{
         //System.out.println(ID);
        //Buscando uma conexão com o Banco de Dados
        Connection con = Conecta.getConexao();
        /*Criando obj. capaz de executar instruções SQL no banco de dados*/
        Statement stat = con.createStatement();   
        
        try {
            String sql;
            /* Montando uma String que delete um registro através de um
                código(idProduto) enviado pelo usuário. */
            sql = "delete from funcionario where idfuncionario = '"+ID+"';";
            //System.out.println(sql);
            stat.execute(sql);
        } catch (SQLException se) {
            throw  new SQLException("Erro ao deletar! "+se.getMessage());
       } finally {
            stat.close();
            con.close();
        }//fecha finally
    }
   
     private void filtrar(){
        try {
            if (jTextField1.getText().isEmpty()) {
                buscar();
            }else{
               
                // Buscando o valor da JComboBox. O método getSelectedItem
                    //devolve um Object selecionado na JCombo 
                String pesquisa = (String) jComboBox1.getSelectedItem();
                
                //Criando variável que armazenará a consulta.
                String query=null;
                
                // Testando o que o usuário escolheu no JComboBox. Conforme
                  //  o que foi escolhido uma determinada consulta será montada. 
                if(pesquisa.equals("ID")){
                    query ="where funcionario.idfuncionario like "+jTextField1.getText()+" ;";
                }else if(pesquisa.equals("Nome")){
                    query = "where funcionario.nome_funcionario like '%" + jTextField1.getText() + "%' ;";
                }
                //System.out.println(query);
                // Criando um ArrayList vazio para receber os dados do banco.
                ArrayList<funcionarios> fun = new ArrayList<>();               
                
                // Buscando um ArrayList conforme o filtro que o usuário
                   // solicitou.                 
                fun = filtras(query);
                 // System.out.println(fun);
                // For que preenche o modelo de tabela (dtm) buscando 
                  // dados do ArrayList chamado p. 
                for (int i = 0; i < fun.size(); i++) {
                    dtm.addRow(new String[]{
                        String.valueOf(fun.get(i).getNomes()),
                        String.valueOf(fun.get(i).getIds()),
                        String.valueOf(fun.get(i).getSenhas()),
                        String.valueOf(fun.get(i).getNumeros()),
                        String.valueOf(fun.get(i).getGrupos())
                                
                    });
                }//fecha for
                jTable1.setModel(dtm);                
            }//fecha else
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this,
                    "Erro ao buscar! " + e.getMessage());
        }//fecha catch        
    }//fecha filtrar
     public ArrayList<funcionarios> filtras(String query) throws SQLException {
        Connection con = Conecta.getConexao();
        Statement stat = con.createStatement();
        try {
            String sql;
            sql = "select idfuncionario, nome_funcionario, telefone_funcionario, senha_funcionario, grupo_funcionario from funcionario " + query;
            //System.out.println(sql);
            ResultSet rs = stat.executeQuery(sql);
            
            ArrayList<funcionarios> li = new ArrayList<>();
            
            while (rs.next()) {
                funcionarios f= new funcionarios();
                f.setNomes(rs.getString("nome_funcionario"));
                f.setIds(rs.getString("idfuncionario"));
                f.setSenhas(rs.getString("senha_funcionario"));
                f.setNumeros(rs.getString("telefone_funcionario"));
                f.setGrupos(rs.getString("grupo_funcionario"));
                
               
                li.add(f);
            }
            return li;
        } catch (SQLException se) {
            throw new SQLException("Erro ao buscar dados do Banco! " + se.getMessage());
        } finally {
            stat.close();
            con.close();
        }//fecha finally
    }//fecha método filtrar 
    /**
     * @param args the command line arguments
     */

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GerenciarFuncionario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GerenciarFuncionario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GerenciarFuncionario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GerenciarFuncionario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GerenciarFuncionario().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
