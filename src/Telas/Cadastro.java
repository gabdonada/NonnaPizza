/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Telas;

import com.mysql.jdbc.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @authors Jonathan, Arthur e Gabriel at DotTech technologies 2017(C)
 
 */
public class Cadastro extends javax.swing.JFrame {
    int determina;
    int ids;
    int criaId = 0;
    /**
     * Creates new form CadastroCliente
     */
    public Cadastro() {
        initComponents();
        setSize(700,550);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDesktopPane1 = new javax.swing.JDesktopPane();
        jLabel3 = new javax.swing.JLabel();
        jLabelEndSen = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldNome = new javax.swing.JTextField();
        jTextFieldCpf = new javax.swing.JTextField();
        jTextFieldEndSen = new javax.swing.JTextField();
        jTextFieldTele = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabelCpf1 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();

        setTitle("Cadastro");
        setIconImage(new ImageIcon(getClass().getResource("/img/Botão.png")).getImage());
        setLocation(new java.awt.Point(200, 150));
        setResizable(false);
        getContentPane().setLayout(null);

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jLabel3.setText("Nome:");
        jDesktopPane1.add(jLabel3);
        jLabel3.setBounds(100, 160, 70, 30);

        jLabelEndSen.setBackground(new java.awt.Color(255, 255, 255));
        jLabelEndSen.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jLabelEndSen.setText("Endereço:");
        jDesktopPane1.add(jLabelEndSen);
        jLabelEndSen.setBounds(90, 240, 80, 30);

        jLabel5.setBackground(new java.awt.Color(255, 255, 255));
        jLabel5.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jLabel5.setText("Telefone:");
        jDesktopPane1.add(jLabel5);
        jLabel5.setBounds(90, 200, 80, 30);
        jDesktopPane1.add(jTextFieldNome);
        jTextFieldNome.setBounds(190, 160, 260, 30);
        jDesktopPane1.add(jTextFieldCpf);
        jTextFieldCpf.setBounds(190, 120, 260, 30);
        jDesktopPane1.add(jTextFieldEndSen);
        jTextFieldEndSen.setBounds(190, 240, 260, 30);

        jTextFieldTele.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldTeleActionPerformed(evt);
            }
        });
        jDesktopPane1.add(jTextFieldTele);
        jTextFieldTele.setBounds(190, 200, 260, 30);

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jButton1.setText("Cadastrar");
        jButton1.setBorder(new javax.swing.border.SoftBevelBorder(0));
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jDesktopPane1.add(jButton1);
        jButton1.setBounds(500, 370, 110, 50);

        jLabelCpf1.setBackground(new java.awt.Color(255, 255, 255));
        jLabelCpf1.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jLabelCpf1.setText("CPF:");
        jDesktopPane1.add(jLabelCpf1);
        jLabelCpf1.setBounds(100, 120, 70, 30);

        jLabel1.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jLabel1.setText("ID:");
        jDesktopPane1.add(jLabel1);
        jLabel1.setBounds(100, 77, 60, 30);
        jDesktopPane1.add(jTextField1);
        jTextField1.setBounds(190, 80, 140, 30);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/TelaPadrão.png"))); // NOI18N
        jDesktopPane1.add(jLabel2);
        jLabel2.setBounds(-120, -20, 940, 560);

        getContentPane().add(jDesktopPane1);
        jDesktopPane1.setBounds(-10, 0, 790, 540);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void jTextFieldTeleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldTeleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldTeleActionPerformed
    public void Vizualiza(){
        if(determina == 1){
            geraIdC();
            jLabelCpf1.setText("CPF:");
            jLabelEndSen.setText("Endereço: ");
        }else if(determina == 2){
            geraIdF();
            jLabelCpf1.setText("Grupo: ");
            jLabelEndSen.setText("Senha:");
            
        }
    }
    public void geraIdC(){
        try{
             
             
             ArrayList<Cliente> c= new ArrayList();
             
             c =buscaCli();
             criaId= 1+ids;
             String det = ""+criaId;
             jTextField1.setText(det);
             jTextField1.setEnabled(false);
             
             
         }catch(Exception e){
             JOptionPane.showMessageDialog(null,
                     "Erro na busca na Interface"+e);
         
         }
    }
    public ArrayList<Cliente> buscaCli()
            throws SQLException{
        Connection con=(Connection) Conecta.getConexao();
        Statement stat = con.createStatement();
        
        try{
            String sql;
            sql="select idcliente from cliente";

            ResultSet rs = stat.executeQuery(sql);
            ArrayList<Cliente> c = new ArrayList();
            //enquanto existir próximo valor a ser setado
            while(rs.next()){
                
                ids=(rs.getInt("idcliente"));
                                
            }
            return c;
        }catch(SQLException e){
            throw new SQLException("Erro ao busca cliente: "+e);
        }finally{
            con.close();
            stat.close();
        }
    }
    public void geraIdF(){
        try{
             
             
             ArrayList<funcionarios> fs= new ArrayList();
             
             fs =buscaFuncs();
             criaId= 1+ids;
             String det = ""+criaId;
             jTextField1.setText(det);
             jTextField1.setEnabled(false);
             
             
         }catch(Exception e){
             JOptionPane.showMessageDialog(null,
                     "Erro na busca na Interface"+e);
         
         }
    }
    public ArrayList<funcionarios> buscaFuncs()
            throws SQLException{
        Connection con=(Connection) Conecta.getConexao();
        Statement stat = con.createStatement();
        
        try{
            String sql;
            sql="select idfuncionario from funcionario";

            ResultSet rs = stat.executeQuery(sql);
            ArrayList<funcionarios> f = new ArrayList();
            //enquanto existir próximo valor a ser setado
            while(rs.next()){
                
                ids=(rs.getInt("idfuncionario"));
                                
            }
            return f;
        }catch(SQLException e){
            throw new SQLException("Erro ao buscar Funcionarios :"+e);
        }finally{
            con.close();
            stat.close();
        }
    }
    funcionarios f = new funcionarios();
    Cliente c = new Cliente();
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       if(determina == 1){
         try {
           
        
             c.setNome(jTextFieldNome.getText());
             c.setTelefone(jTextFieldTele.getText());
             c.setCpf(jTextFieldCpf.getText());
             
             c.setEndereco(jTextFieldEndSen.getText());

                 c.setId(criaId);
               
                   cadastraCliente(c);
             } catch (SQLException ex) {
                   JOptionPane.showMessageDialog(null, "Erro! "+ex);
               }
       
       }else if(determina == 2){
           try {
           
        
             f.setNomes(jTextFieldNome.getText());
             f.setNumeros(jTextFieldTele.getText());
             f.setGrupos(jTextFieldCpf.getText());
             
             f.setSenhas(jTextFieldEndSen.getText());

                 f.setIdt(criaId);
               
                   cadastraFunc(f);
             
                 f.getIds();
             
       }
           catch (SQLException ex) {
                   JOptionPane.showMessageDialog(null, "Erro! "+ex);
               }
       }
    
    }//GEN-LAST:event_jButton1ActionPerformed
    public void cadastraFunc(funcionarios f) throws SQLException{
        Connection con = (Connection) Conecta.getConexao();
        Statement stat = con.createStatement();
        try{
            String sql;
            sql = "insert into funcionario(idfuncionario, nome_funcionario, senha_funcionario, telefone_funcionario, grupo_funcionario) values('"+f.getIdt()+"', '"+f.getNomes()+"', '"+f.getSenhas()+"','" +f.getNumeros()+ "', '"+f.getGrupos()+"');";
         //comando sendo executado
            stat.execute(sql);
            JOptionPane.showMessageDialog(null, "Cadastrado com sucesso");
        }catch(SQLException e){
            throw new SQLException("Erro ao cadastrar:"+e);
        }finally{
            //encerrando conexao
            con.close();
            stat.close();
        }
    
    }
    public void cadastraCliente(Cliente c) throws SQLException{
        Connection con = (Connection) Conecta.getConexao();
        Statement stat = con.createStatement();
        try{
            String sql;
            sql = "insert into cliente(idcliente, nome_cliente, cpf_cliente, endereco_cliente, telefone_cliente) values('"+c.getId()+"', '"+c.getNome()+"', '"+c.getCpf()+"','" +c.getEndereco()+ "', '"+c.getTelefone()+"');";
         //comando sendo executado
            stat.execute(sql);
            JOptionPane.showMessageDialog(null, "Cadastrado com sucesso");
        }catch(SQLException e){
            throw new SQLException("Erro ao cadastrar:"+e);
        }finally{
            //encerrando conexao
            con.close();
            stat.close();
        }
    
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Cadastro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Cadastro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Cadastro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Cadastro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Cadastro().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabelCpf1;
    private javax.swing.JLabel jLabelEndSen;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextFieldCpf;
    private javax.swing.JTextField jTextFieldEndSen;
    private javax.swing.JTextField jTextFieldNome;
    private javax.swing.JTextField jTextFieldTele;
    // End of variables declaration//GEN-END:variables
}
